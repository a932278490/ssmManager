<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lq.ssm.student.dao.StudentDao">
	<resultMap type="student" id="student_map">
		<id property="id" column="student_id" />
		<result property="name" column="student_name" />
		<result property="sex" column="student_sex" />
		<result property="age" column="student_age" />
		<result property="phone" column="student_phone" />
		<result property="qq" column="student_qq" />
		<result property="email" column="student_email" />
		<result property="parentname" column="student_parents_name" />
		<result property="parentphone" column="student_parents_phone" />
		<result property="idcard" column="student_idcard" />
		<result property="address" column="student_address" />
		<result property="birthday" column="student_birthday" />
		<result property="school" column="student_school" />
		<result property="province" column="student_pro" />
		<result property="city" column="student_pro_city" />
		<result property="ispay" column="student_ispay" />
		<result property="state" column="student_state" />
		<result property="marke" column="student_mark" />
		<result property="number" column="student_number" />
		<result property="password" column="student_password" />
		<result property="desc" column="student_desc" />
		<association property="staff" column="staff_id" resultMap="staff_map"></association>
		<association property="classes" column="class_id"
			resultMap="classes_map"></association>
		<association property="dictionory" column="data_id"
			resultMap="dictionory_map"></association>
	</resultMap>

	<resultMap type="dictionory" id="dictionory_map">
		<id property="id" column="data_id" />
		<result property="context" column="data_context" />
		<result property="type" column="data_type" />
		<result property="desc" column="data_desc" />
	</resultMap>

	<resultMap type="staff" id="staff_map">
		<id property="sid" column="staff_id" />
		<result property="name" column="staff_name" />
	</resultMap>

	<resultMap type="classes" id="classes_map">
		<id property="id" column="class_id" />
		<result property="name" column="class_name" />
	</resultMap>

	<!-- 查询全部 -->
	<select id="findAll" resultMap="student_map">
		select * from student_info s
		left join class_info c on s.class_id=c.class_id
		left join staff_info t on s.staff_id=t.staff_id
		left join data_dictionory d on s.data_id=d.data_id
		where student_mark = '2' 
	</select>

	<!-- 添加 -->
	<insert id="save" parameterType="student">
		<selectKey keyProperty="id" resultType="int" order="BEFORE">
			select
			student_seq.nextval from dual
		</selectKey>
		insert into student_info
		(student_id, class_id, staff_id, student_name, student_sex, student_age,
		student_phone, student_qq, student_email, student_parents_name,
		student_parents_phone, student_idcard, student_address,
		student_birthday, student_school, student_pro, student_pro_city,
		student_ispay, data_id, student_mark, student_number,
		student_password, student_desc)
		values
		(#{id}, #{classes.id}, #{staff.sid}, #{name}, #{sex}, #{age}, #{phone},
		#{qq}, #{email}, #{parentname}, #{parentphone}, #{idcard}, #{address},
		#{birthday}, #{school}, #{province}, #{city}, #{ispay},
		#{dictionory.id}, #{marke}, #{number}, #{password}, #{desc})
	</insert>

	<!--删除  -->
	<update id="delete" parameterType="student">
		update student_info set
		student_mark = '1' where student_id =#{id}
	</update>

	<!-- 修改 -->
	<update id="update" parameterType="student">
		update student_info
		set student_id = #{id},
		class_id = #{classes.id},
		staff_id = #{staff.sid},
		student_name = #{name},
		student_sex = #{sex},
		student_age = #{age},
		student_phone = #{phone},
		student_qq = #{qq},
		student_email = #{email},
		student_parents_name = #{parentname},
		student_parents_phone = #{parentphone},
		student_idcard = #{idcard},
		student_address = #{address},
		student_birthday = #{birthday},
		student_school = #{school},
		student_pro = #{province},
		student_pro_city = #{city},
		student_ispay = #{ispay},
		data_id = #{dictionory.id},
		student_mark = #{marke},
		student_number = #{number},
		student_password = #{password},
		student_desc = #{desc}
		where student_id =#{id}
	</update>

	<!-- 通过id查询 -->
	<select id="findById" resultMap="student_map">
		select * from student_info s
		left join class_info c on s.class_id=c.class_id
		left join staff_info t on s.staff_id=t.staff_id
		left join data_dictionory d on s.data_id=d.data_id
		where s.student_id =#{id} 
	</select>

	<!-- 模糊查询 -->
	<select id="findByName" resultMap="student_map">
		select * from student_info s
		left join class_info c on s.class_id=c.class_id
		left join staff_info t on s.staff_id=t.staff_id
		left join data_dictionory d on s.data_id=d.data_id
		where s.student_name
		like '%${name}%'
	</select>
	<select id="getstubypay" resultMap="student_map">
		select * from student_info
		where STUDENT_MARK=#{ispay}
	</select>
	<!-- 600开始 -->
	<!-- 学生池 -->
	<select id="findStudentPool" resultMap="student_map">
		select * from
		student_info s
		left join class_info c on s.class_id=c.class_id
		left join staff_info t on s.staff_id=t.staff_id
		left join data_dictionory d on s.data_id=d.data_id
		where s.student_mark = '0'
	</select>
	<!-- save -->
	<insert id="save1" parameterType="student">
		<selectKey keyProperty="id" resultType="int" order="BEFORE">
			select
			student_seq.nextval from dual
		</selectKey>
		insert into student_info
		(student_id,student_name, student_sex, student_age,
		student_phone, student_qq, student_email, student_parents_name,
		student_parents_phone, student_idcard, student_address,
		student_birthday, student_school, student_pro, student_pro_city,
		student_ispay, data_id, student_mark,
		student_desc)
		values
		(#{id}, #{name}, #{sex}, #{age}, #{phone},
		#{qq}, #{email}, #{parentname}, #{parentphone}, #{idcard}, #{address},
		#{birthday}, #{school}, #{province}, #{city}, #{ispay},
		#{dictionory.id}, #{marke}, #{desc})
	</insert>
	<!-- delete -->
	<delete id="delete1">
		delete student_info where student_id =#{id}
</delete>
<!-- updateState -->
<update id="updateState" parameterType="student">
		update student_info set
		student_mark = '1' where student_id =#{id}
</update>
<!-- updateStudent -->
<update id="updateStudent" parameterType="student">
		update student_info set 
		student_name = #{name},
		student_sex = #{sex},
		student_age = #{age},
		student_phone = #{phone},
		student_qq = #{qq},
		student_email = #{email},
		student_parents_name = #{parentname},
		student_parents_phone = #{parentphone},
		student_idcard = #{idcard},
		student_address = #{address},
		student_birthday = #{birthday},
		student_school = #{school},
		student_pro = #{province},
		student_pro_city = #{city},
		student_desc = #{desc}
		where student_id =#{id}
	</update>
<!-- 多条件查询 -->
	<select id="findByCon" resultMap="student_map">
		select * from student_info s
		where s.student_mark=2 
		<if test="sname!=null">
			and s.student_name like '%${sname}%' 
		</if>
		<if test="state!=null">
			and s.data_id=#{state}
		</if>
	</select>
</mapper>